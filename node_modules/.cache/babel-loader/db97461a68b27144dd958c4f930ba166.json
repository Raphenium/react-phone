{"ast":null,"code":"import React from\"react\";import PaypalExpressBtn from\"react-paypal-express-checkout\";import{jsx as _jsx}from\"react/jsx-runtime\";export default class MyApp extends React.Component{render(){const onSuccess=payment=>{// Congratulation, it came here means everything's fine!\nconsole.log(\"The payment was succeeded!\",payment);this.props.clearCart();this.props.history.push(\"/\");// You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n};const onCancel=data=>{// User pressed \"cancel\" or close Paypal's popup!\nconsole.log(\"The payment was cancelled!\",data);// You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n};const onError=err=>{// The main Paypal's script cannot be loaded or somethings block the loading of that script!\nconsole.log(\"Error!\",err);// Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n// => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n};let env=\"sandbox\";// you can set here to 'production' for production\nlet currency=\"USD\";// or you can set this value from your props or state\n//let total = 1;\n// same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n// Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\nconst client={sandbox:process.env.REACT_APP_APP_ID,production:\"YOUR-PRODUCTION-APP-ID\"};// In order to get production's app-ID, you will have to send your app to Paypal for approval first\n// For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\n//   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\n// For production app-ID:\n//   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\n// NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\nreturn/*#__PURE__*/_jsx(PaypalExpressBtn,{env:env,client:client,currency:currency,total:this.props.totalAmount,onError:onError,onSuccess:onSuccess,onCancel:onCancel});}}","map":{"version":3,"sources":["C:/Users/YEMI/Desktop/react/src/components/Cart/PayPalButton.js"],"names":["React","PaypalExpressBtn","MyApp","Component","render","onSuccess","payment","console","log","props","clearCart","history","push","onCancel","data","onError","err","env","currency","client","sandbox","process","REACT_APP_APP_ID","production","totalAmount"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,+BAA7B,C,2CAEA,cAAe,MAAMC,CAAAA,KAAN,QAAoBF,CAAAA,KAAK,CAACG,SAAU,CACjDC,MAAM,EAAG,CACP,KAAMC,CAAAA,SAAS,CAAGC,OAAO,EAAI,CAC3B;AACAC,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAA0CF,OAA1C,EACA,KAAKG,KAAL,CAAWC,SAAX,GACA,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,EACA;AACD,CAND,CAQA,KAAMC,CAAAA,QAAQ,CAAGC,IAAI,EAAI,CACvB;AACAP,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAA0CM,IAA1C,EACA;AACD,CAJD,CAMA,KAAMC,CAAAA,OAAO,CAAGC,GAAG,EAAI,CACrB;AACAT,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAsBQ,GAAtB,EACA;AACA;AACD,CALD,CAOA,GAAIC,CAAAA,GAAG,CAAG,SAAV,CAAqB;AACrB,GAAIC,CAAAA,QAAQ,CAAG,KAAf,CAAsB;AACtB;AACA;AACA;AAEA,KAAMC,CAAAA,MAAM,CAAG,CACbC,OAAO,CAAEC,OAAO,CAACJ,GAAR,CAAYK,gBADR,CAEbC,UAAU,CAAE,wBAFC,CAAf,CAIA;AACA;AACA;AACA;AACA;AAEA;AACA,mBACE,KAAC,gBAAD,EACE,GAAG,CAAEN,GADP,CAEE,MAAM,CAAEE,MAFV,CAGE,QAAQ,CAAED,QAHZ,CAIE,KAAK,CAAE,KAAKT,KAAL,CAAWe,WAJpB,CAKE,OAAO,CAAET,OALX,CAME,SAAS,CAAEV,SANb,CAOE,QAAQ,CAAEQ,QAPZ,EADF,CAWD,CAnDgD","sourcesContent":["import React from \"react\";\r\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\r\n\r\nexport default class MyApp extends React.Component {\r\n  render() {\r\n    const onSuccess = payment => {\r\n      // Congratulation, it came here means everything's fine!\r\n      console.log(\"The payment was succeeded!\", payment);\r\n      this.props.clearCart();\r\n      this.props.history.push(\"/\");\r\n      // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n    };\r\n\r\n    const onCancel = data => {\r\n      // User pressed \"cancel\" or close Paypal's popup!\r\n      console.log(\"The payment was cancelled!\", data);\r\n      // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n    };\r\n\r\n    const onError = err => {\r\n      // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n      console.log(\"Error!\", err);\r\n      // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n      // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n    };\r\n\r\n    let env = \"sandbox\"; // you can set here to 'production' for production\r\n    let currency = \"USD\"; // or you can set this value from your props or state\r\n    //let total = 1;\r\n    // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n    // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n\r\n    const client = {\r\n      sandbox: process.env.REACT_APP_APP_ID,\r\n      production: \"YOUR-PRODUCTION-APP-ID\"\r\n    };\r\n    // In order to get production's app-ID, you will have to send your app to Paypal for approval first\r\n    // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\r\n    //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\r\n    // For production app-ID:\r\n    //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\r\n\r\n    // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\r\n    return (\r\n      <PaypalExpressBtn\r\n        env={env}\r\n        client={client}\r\n        currency={currency}\r\n        total={this.props.totalAmount}\r\n        onError={onError}\r\n        onSuccess={onSuccess}\r\n        onCancel={onCancel}\r\n      />\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}